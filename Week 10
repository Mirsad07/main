Using the two arrays shown below, write a program that prompts the user to enter an
integer between 1 and 12 and then displays the months and its number of days
corresponding to the integer entered. Your program should display “wrong number” if
the user enters a wrong number by catching ArrayIndexOutOfBoundsException.
InputMismatchException
The previous program works well as long as the user enters an integer. Otherwise, you
may get another kind of exception. For instance, if you use nextInt() of Scanner, you could
have an InputMismatchException. Modify it to prevent users entering anything other
than an integer.

package week10;
import java.util.Scanner;
import java.util.InputMismatchException;
public class DisplayMonth {
	public static void main(String[]args)
	{
		String [] months= {"January","February",
				"March","April","May","June","July",
				"August","September","October","November","December"};
				
		int[]days= {31, 28, 31, 30,31,30,31,30,31};
     Scanner input=new Scanner(System.in);
		try {
		System.out.println("Enter the month");
		int month=input.nextInt();
		System.out.println("The number of days for " +
		months [month-1]+" is "+
		days[month-1]);
		


package week10;

import java.util.Scanner;
import java.io.File;
import java.io.PrintWriter;
public class replaceText {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Get source file name
        System.out.println("Enter the source file name");
        String source = input.nextLine();
        
        File sourceFile = new File(source);
        if (!sourceFile.exists()) {
            System.out.println("This file does not exist");
            System.exit(0);
        }

        // Get target file name
        System.out.println("Enter the target file name");
        String target = input.nextLine();
        
        File targetFile = new File(target);
        if (!targetFile.exists()) {
            System.out.println("The target file does not exist");
            System.exit(0);
        }

        // Get the old string to replace
        System.out.println("Enter the old string to be replaced");
        String oldS = input.nextLine();
        
        // Get the new string to replace the old string
        System.out.println("Enter the new string to replace the old one");
        String newS = input.nextLine();

        // Perform the replacement and write to the target file
        try (Scanner inputSource = new Scanner(sourceFile);
             PrintWriter outputSource = new PrintWriter(targetFile)) {
            while (inputSource.hasNextLine()) {
                String s1 = inputSource.nextLine();
                String s2 = s1.replace(oldS, newS);
                outputSource.println(s2);
            }
        } catch (Exception e) {
            System.out.println("No files were found");
        }
    }
}
		catch(ArrayIndexOutOfBoundsException e)
		{
			System.out.println("The month should be a number between 1 and 12");
			
	     }
		catch(InputMismatchException e)
		{
			System.out.println("Month should be a number");
		}
	}
}


IllegalTriangleException
Define the Triangle class with three sides. In a triangle, the sum of any two sides is greater
than the other side. The Triangle class must adhere to this rule. Create the
IllegalTriangleException class, and modify the constructor of the Triangle class to throw an
IllegalTriangleException object if a triangle is created with sides that violate the rule:
package week10;

public class IllegalTriangleException extends Exception {
public IllegalTriangleException(int a, int b, int c) {
	System.out.println("Incorrect");
    }
}

package week10;

public class Triangle {
private int a, b, c;
public Triangle(int a, int b, int c)throws IllegalTriangleException
{
	if(a+b<c|| b+c<a||a+c<b)
throw new IllegalTriangleException(a, b, c);
	else
this.a=a;
this.b=b;
this.c=c;
}
public int getSideA() {return a;}
public int getSideB() {return b;}
public int getSideC() {return c;}

}

package week10;

public class TestTriangle {
	
public static void main(String [] args)
{
	try {
		Triangle triangle1=new Triangle(2, 2, 10);
System.out.println("Triangle correct");
	}
	catch(IllegalTriangleException ex)
	{ 
		System.out.println(ex.toString());
	}
	
	}
  }

Write a program named ReplaceText that replaces all occurrences of a string in a text
file with a new string and saves the change into a new file.. The file name and strings
are entered from the user.
Replace Text Part 2
ReplaceText.java, is a program that replaces text in a source file and saves the change into
a new file. Revise the above program to save the change into the original file.


